{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Desktop\\\\TruckX_Assignment\\\\assignment\\\\src\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Input } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  let history = useHistory();\n  const [Email, setEmail] = useState('');\n  const [Password, setPassword] = useState('');\n  const [tab, selectTab] = useState('login');\n\n  const handleConfirm = async () => {\n    let response;\n    {\n      tab === 'login' ? response = await fetch('https://reqres.in/api/login', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Accept\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          email: Email,\n          password: Password\n        })\n      }) : response = await fetch('https://reqres.in/api/register', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Accept\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          email: Email,\n          password: Password\n        })\n      });\n    }\n    response.json().then(item => {\n      localStorage.getItem('token', item.token);\n      history.push('/admin');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-conatiner\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => selectTab('login'),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => selectTab('signup'),\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Input, {\n      value: Email,\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Input.Password, {\n      value: Password,\n      onChange: event => setPassword(event.target.value),\n      sec: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleConfirm(),\n      children: tab === 'login' ? 'Login' : 'Signup'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qWeSpDGPygsbVLhSDOS477ZLsG8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/shubh/Desktop/TruckX_Assignment/assignment/src/src/Login.js"],"names":["Button","Input","React","useState","useHistory","Login","history","Email","setEmail","Password","setPassword","tab","selectTab","handleConfirm","response","fetch","method","headers","mode","body","JSON","stringify","email","password","json","then","item","localStorage","getItem","token","push","event","target","value"],"mappings":"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","sourcesContent":["import { Button, Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const [Email , setEmail] = useState('');\r\n    const [Password , setPassword] = useState('');\r\n    const [tab,selectTab] = useState('login')\r\n    const handleConfirm = async () => {\r\n        let response ;\r\n        {\r\n            tab === 'login' ? \r\n             response = await fetch('https://reqres.in/api/login',{\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Accept\": \"application/json\",\r\n                },\r\n                mode: 'cors',\r\n                body: JSON.stringify( {\r\n                    email: Email,\r\n                    password: Password\r\n                })\r\n            }) : \r\n            response = await fetch('https://reqres.in/api/register',{\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Accept\": \"application/json\",\r\n                },\r\n                mode: 'cors',\r\n                body: JSON.stringify( {\r\n                    email: Email,\r\n                    password: Password\r\n                })\r\n            })\r\n        }\r\n       \r\n        response.json().then((item) => {\r\n            localStorage.getItem('token', item.token);\r\n            history.push('/admin')\r\n        })\r\n    }\r\nreturn(\r\n    <div>\r\n        <div className=\"login-conatiner\">\r\n        <Button onClick={() => selectTab('login')}>Login</Button>\r\n        <Button onClick={() => selectTab('signup')}>Signup</Button>\r\n        </div>\r\n       \r\n        <span>Email</span> <Input value={Email} onChange={(event) => {\r\n            setEmail(event.target.value);\r\n        }} />\r\n        <span>Password</span> <Input.Password value={Password} onChange={(event) => setPassword(event.target.value)} sec />\r\n        <Button onClick={() => handleConfirm()}>{tab === 'login' ? 'Login': 'Signup'}</Button>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}