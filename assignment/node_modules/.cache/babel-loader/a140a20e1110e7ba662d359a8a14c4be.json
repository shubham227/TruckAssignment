{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubh\\\\Desktop\\\\TruckX_Assignment\\\\assignment\\\\src\\\\src\\\\AddUser.js\";\nimport React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst createUser = async data => {\n  await fetch('https://reqres.in/api/users', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Accept\": \"application/json\"\n    },\n    mode: 'cors',\n    body: JSON.stringify(data)\n  }).then(res => {\n    console.log('user response', res);\n    var user = {\n      Name: res.name,\n      Email: res.email,\n      Phone: res.phone,\n      Username: res.Username\n    };\n    alert(' user created with following details', JSON.stringify(user));\n  });\n};\n\nconst onFinish = values => {\n  console.log('Success:', values);\n  createUser(values);\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log('Failed:', errorInfo);\n};\n\nconst AddUser = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please enter your Name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please enter your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter usernaname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Phone\",\n        name: \"phone\",\n        rules: [{\n          required: true,\n          message: 'Please input your phone'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/shubh/Desktop/TruckX_Assignment/assignment/src/src/AddUser.js"],"names":["React","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","createUser","data","fetch","method","headers","mode","body","JSON","stringify","then","res","console","log","user","Name","name","Email","email","Phone","phone","Username","alert","onFinish","values","onFinishFailed","errorInfo","AddUser","remember","required","message"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst createUser = async (data) => {\r\n    await fetch('https://reqres.in/api/users', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        mode: 'cors',\r\n        body: JSON.stringify(data)\r\n}).then((res) =>{\r\n    console.log('user response', res)\r\n    var user   ={\r\n        Name:res.name,\r\n        Email:res.email,\r\n        Phone: res.phone,\r\n        Username: res.Username\r\n    }\r\n    alert(' user created with following details' , JSON.stringify(user));\r\n});\r\n\r\n}\r\nconst onFinish = (values) => {\r\n    console.log('Success:', values);\r\n    createUser(values);\r\n\r\n};\r\n\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\nconst AddUser = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div>Add User</div>\r\n\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Please enter your Name' }]}\r\n                >\r\n                    <Input placeholder=\"Enter Name\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please enter your username!' }]}\r\n                >\r\n                    <Input placeholder=\"Enter usernaname\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Please input your email' }]}\r\n                >\r\n                    <Input placeholder=\"Enter email\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    rules={[{ required: true, message: 'Please input your phone' }]}\r\n                >\r\n                    <Input placeholder=\"Enter Phone\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n        </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}